{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOX6ccksHpbg/CgSubSdx8/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"bR7aRFPP2z_L"},"outputs":[],"source":["%%writefile app.py\n","import streamlit as st\n","import yfinance as yf\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from statsmodels.tsa.arima.model import ARIMA\n","from datetime import timedelta\n","import numpy as np\n","import skfuzzy as fuzz\n","from skfuzzy import control as ctrl\n","\n","# -----------------------------\n","# 1. Ambil data dari yfinance\n","# -----------------------------\n","def ambil_data(symbol, period, interval):\n","    data = yf.download(symbol, period=period, interval=interval, progress=False)\n","    if isinstance(data.columns, pd.MultiIndex):\n","        data.columns = data.columns.get_level_values(0)\n","    data = data[['Close']].asfreq('B').fillna(method='ffill')\n","    return data\n","\n","# -----------------------------\n","# 2. Bangun model ARIMA\n","# -----------------------------\n","def bangun_model_arima(data, order=(3,1,2), hari_prediksi=10):\n","    model = ARIMA(data['Close'], order=order)\n","    fitted = model.fit()\n","    forecast = fitted.forecast(steps=hari_prediksi)\n","    return forecast\n","\n","# -----------------------------\n","# 3. Gabungkan data aktual + prediksi\n","# -----------------------------\n","def gabungkan_data(data, forecast):\n","    last_date = data.index[-1]\n","    pred_dates = pd.bdate_range(last_date + timedelta(1), periods=len(forecast))\n","    df_forecast = pd.DataFrame(forecast.values, index=pred_dates, columns=[\"Close\"])\n","    df_forecast.index.name = 'Date'\n","    data_gabungan = pd.concat([data[['Close']], df_forecast], axis=0)\n","    return data_gabungan, df_forecast\n","\n","# -----------------------------\n","# 4. Visualisasi Harga + Prediksi\n","# -----------------------------\n","def plot_prediksi(data, forecast, symbol):\n","    last_date = data.index[-1]\n","    pred_dates = pd.bdate_range(last_date + timedelta(1), periods=len(forecast))\n","\n","    fig, ax = plt.subplots(figsize=(14,6))\n","    ax.plot(data.index, data['Close'], label='Harga Aktual', marker='o', color='blue')\n","    ax.plot(pred_dates, forecast, label='Prediksi ARIMA (10 Hari)', marker='x', linestyle='--', color='orange')\n","\n","    ax.set_title(f\"📈 Harga Aktual & Prediksi ARIMA — {symbol}\")\n","    ax.set_xlabel(\"Tanggal\")\n","    ax.set_ylabel(\"Harga Penutupan\")\n","    ax.grid(True, linestyle=\"--\", alpha=0.5)\n","    ax.legend()\n","    st.pyplot(fig)\n","\n","# -----------------------------\n","# 5. Analisis Fuzzy\n","# -----------------------------\n","def analisis_fuzzy(data_gabungan, symbol):\n","    data = data_gabungan.copy()\n","    data['Return'] = data['Close'].pct_change() * 100\n","    data.dropna(inplace=True)\n","\n","    harga = ctrl.Antecedent(np.linspace(data['Close'].min(), data['Close'].max(), 100), 'harga')\n","    perubahan = ctrl.Antecedent(np.linspace(data['Return'].min(), data['Return'].max(), 100), 'perubahan')\n","    sinyal = ctrl.Consequent(np.arange(0, 101, 1), 'sinyal')\n","\n","    harga['rendah'] = fuzz.trimf(harga.universe, [data['Close'].min(), data['Close'].min(), data['Close'].mean()])\n","    harga['normal'] = fuzz.trimf(harga.universe, [data['Close'].min(), data['Close'].mean(), data['Close'].max()])\n","    harga['tinggi'] = fuzz.trimf(harga.universe, [data['Close'].mean(), data['Close'].max(), data['Close'].max()])\n","\n","    perubahan['turun'] = fuzz.trimf(perubahan.universe, [data['Return'].min(), data['Return'].min(), 0])\n","    perubahan['stabil'] = fuzz.trimf(perubahan.universe, [data['Return'].min(), 0, data['Return'].max()])\n","    perubahan['naik'] = fuzz.trimf(perubahan.universe, [0, data['Return'].max(), data['Return'].max()])\n","\n","    sinyal['jual'] = fuzz.trimf(sinyal.universe, [0, 0, 50])\n","    sinyal['tahan'] = fuzz.trimf(sinyal.universe, [25, 50, 75])\n","    sinyal['beli'] = fuzz.trimf(sinyal.universe, [50, 100, 100])\n","\n","    rules = [\n","        ctrl.Rule(harga['rendah'] & perubahan['naik'], sinyal['beli']),\n","        ctrl.Rule(harga['normal'] & perubahan['stabil'], sinyal['tahan']),\n","        ctrl.Rule(harga['tinggi'] & perubahan['turun'], sinyal['jual']),\n","        ctrl.Rule(perubahan['naik'] & harga['tinggi'], sinyal['tahan']),\n","        ctrl.Rule(perubahan['turun'] & harga['rendah'], sinyal['tahan'])\n","    ]\n","\n","    sinyal_ctrl = ctrl.ControlSystem(rules)\n","    simulator = ctrl.ControlSystemSimulation(sinyal_ctrl)\n","\n","    fuzzy_values, decisions = [], []\n","    for i in range(len(data)):\n","        simulator.input['harga'] = data['Close'].iloc[i]\n","        simulator.input['perubahan'] = data['Return'].iloc[i]\n","        simulator.compute()\n","        nilai = simulator.output['sinyal']\n","        fuzzy_values.append(nilai)\n","        if nilai < 33:\n","            decisions.append(\"JUAL\")\n","        elif nilai < 66:\n","            decisions.append(\"TAHAN\")\n","        else:\n","            decisions.append(\"BELI\")\n","\n","    data[\"FuzzySignal\"] = fuzzy_values\n","    data[\"Decision\"] = decisions\n","\n","    fig, ax = plt.subplots(figsize=(14,6))\n","    ax.plot(data.index, data['Close'], label='Harga', color='blue')\n","    ax.plot(data.index, data['FuzzySignal'], label='Nilai Fuzzy (0–100)', color='cyan', linewidth=2)\n","    ax.axhspan(0, 33, color='red', alpha=0.1)\n","    ax.axhspan(33, 66, color='yellow', alpha=0.1)\n","    ax.axhspan(66, 100, color='green', alpha=0.1)\n","    ax.set_title(f\"📊 Sinyal Fuzzy Logic: {symbol}\")\n","    ax.set_xlabel(\"Tanggal\")\n","    ax.set_ylabel(\"Harga & Nilai Fuzzy\")\n","    ax.legend()\n","    ax.grid(True, linestyle=\"--\", alpha=0.3)\n","    st.pyplot(fig)\n","\n","    latest = data.iloc[-1]\n","    st.markdown(f\"\"\"\n","    ### 📌 Analisis Terakhir ({symbol})\n","    - 💰 Harga: **{latest['Close']:.2f}**\n","    - 📉 Perubahan: **{latest['Return']:.2f}%**\n","    - 🎚️ Nilai Fuzzy: **{latest['FuzzySignal']:.2f}**\n","    - 🟢 Rekomendasi: **{latest['Decision']}**\n","    \"\"\")\n","\n","    st.dataframe(data.tail(10))\n","\n","# -----------------------------\n","# 6. UI Streamlit\n","# -----------------------------\n","st.set_page_config(page_title=\"ARIMA + Fuzzy Stock Forecast\", layout=\"wide\")\n","\n","st.title(\"📈 Prediksi Harga & Analisis Fuzzy\")\n","symbol = st.selectbox(\"Pilih Aset:\", {\n","    \"Gold Futures\": \"GC=F\",\n","    \"Bitcoin (USD)\": \"BTC-USD\",\n","    \"Crude Oil WTI\": \"CL=F\",\n","    \"S&P 500\": \"^GSPC\",\n","    \"Ethereum (ETH)\": \"ETH-USD\",\n","    \"Dogecoin (DOGE)\": \"DOGE-USD\",\n","    \"Pepe Coin (PEPE)\": \"PEPE-USD\",\n","    \"Ripple (XRP)\": \"XRP-USD\",\n","    \"Solana (SOL)\": \"SOL-USD\"\n","})\n","\n","periode = st.selectbox(\"Pilih Periode:\", [\"1mo\",\"3mo\",\"6mo\",\"1y\",\"2y\",\"5y\"])\n","interval = st.selectbox(\"Pilih Interval:\", [\"1d\", \"1wk\"])\n","\n","if st.button(\"🔮 Jalankan Analisis\"):\n","    data = ambil_data(symbol, periode, interval)\n","    forecast = bangun_model_arima(data)\n","    data_gabungan, df_prediksi = gabungkan_data(data, forecast)\n","    plot_prediksi(data, forecast, symbol)\n","    analisis_fuzzy(data_gabungan, symbol)\n"]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hL28xkSf42F6","executionInfo":{"status":"ok","timestamp":1761370934710,"user_tz":-420,"elapsed":150,"user":{"displayName":"lab Iot","userId":"08528055852666874130"}},"outputId":"3de79296-e023-47b2-8469-8cf25ab39e1d"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["sample_data\n"]}]}]}